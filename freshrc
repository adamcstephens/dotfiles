#!/bin/bash
# vim: set ft=sh:

# install the fresh binary
fresh freshshell/fresh bin/fresh --bin

export fresh_ondemand_path="shell/apps/ondemand"
export ondemand_path="$HOME/.dotfiles/${fresh_ondemand_path}"
function shell_ondemand() {
  shell="$1"

  for ondemand_app in $(find "$ondemand_path"/* | sed 's#.*/##' | cut -f 1 -d . | sort -u)
  do
    if command -v "$ondemand_app" &>/dev/null
    then
      if [[ -e "${ondemand_path}/${ondemand_app}.sh" ]]
      then
        fresh "${fresh_ondemand_path}/${ondemand_app}.sh"
        echo "${shell} (app): ${ondemand_app}.sh"
      fi
      if [[ -e "${ondemand_path}/${ondemand_app}.${shell}" ]]
      then
        fresh "${fresh_ondemand_path}/${ondemand_app}.${shell}"
        echo "${shell} (app): ${ondemand_app}.${shell}"
      fi
    fi
  done
  true
}

export fresh_shell_os_path="shell/os"
export shell_os_path="$HOME/.dotfiles/${fresh_shell_os_path}"
function shell_os() {
  shell="$1"
  if [[ -e "${shell_os_path}/${OS}.sh" ]]
  then
    fresh "${fresh_shell_os_path}/${OS}.sh"
    echo "${shell} (os): ${OS}.sh"
  fi
    if [[ -e "${shell_os_path}/${OS}.${shell}" ]]
  then
    fresh "${fresh_shell_os_path}/${OS}.${shell}"
    echo "${shell} (os): ${OS}.${shell}"
  fi
  if [[ "$OS" == 'Linux' ]] && [[ -e "${shell_os_path}/Linux/${DIST}.sh" ]]
  then
    fresh "${fresh_shell_os_path}/Linux/${DIST}.sh"
    echo "${shell} (os): Linux/${DIST}.sh"
  fi
}

#
# bash
#
if command -v bash &> /dev/null
then
  fresh-options --file=~/.bash_profile --marker
    fresh shell/fresh.sh
    fresh shell/generic.sh

    shell_os bash
    shell_ondemand bash

    fresh shell/bash/bash.bash
    fresh shell/notes.sh
  fresh-options

  fresh shell/bash/bashrc --file
fi

#
# zsh
#

if command -v zsh &> /dev/null
then
  fresh freshshell/fresh contrib/completion/fresh-completion.zsh --file=completion/_fresh

  if ! command -v sheldon &> /dev/null; then
    curl --proto '=https' -fLsS https://rossmacarthur.github.io/install/crate.sh | bash -s -- --repo "rossmacarthur/sheldon" --to ~/bin
  fi

  [[ -h $HOME/.sheldon ]] || ln -svf $HOME/.dotfiles/config/sheldon $HOME/.sheldon

  fresh-options --file=~/.zshrc --marker
    fresh shell/fresh.sh
    fresh shell/zshrc.zsh
    fresh shell/generic.sh

    shell_os zsh
    shell_ondemand zsh

    fresh shell/notes.sh
  fresh-options

  # clean compdump
  rm -f ~/.zcompdump
fi

#
# vim
#
if command -v vim &> /dev/null
then
  [ ! -d ~/.vim ] && mkdir -vp ~/.vim

  if command -v nvim &> /dev/null
  then
    [ ! -d ~/.config ] && mkdir -vp ~/.config
    [ ! -h ~/.config/nvim ] && ln -sfv ~/.vim ~/.config/nvim
    [ ! -h ~/.config/nvim/init.vim ] && ln -sfv ~/.vimrc ~/.config/nvim/init.vim
  fi

  # enable vim-plug
  fresh junegunn/vim-plug plug.vim --file=~/.vim/autoload/plug.vim
fi

if [ -e /etc/debian_version ]
then
  fresh seatgeek/bash-aptfile bin/aptfile --bin
fi

if command -v tmux &> /dev/null
then
  [[ ! -d ~/.tmux/plugins/tpm ]] && git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm/
fi

if command -v kubectl &>/dev/null; then
  fresh ahmetb/kubectx kubectx --bin
  fresh ahmetb/kubectx kubens --bin
fi


if [[ -e $HOME/.ssh/config ]] && grep -q ControlMaster "$HOME/.ssh/config"
then
  fresh ClockworkNet/cmc cmc --bin
fi
