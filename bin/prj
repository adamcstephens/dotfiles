#!/usr/bin/env nu

def main [ project_path: string = "" ] {
  let is_tmux = if $env.TMUX != null { true } else { false }

  let prj = if $project_path != "" { $project_path | path expand } else {
    let lookup = if $is_tmux {
      zoxide query --list | fzf | complete
    } else {
      do { zoxide query --list | rofi -dmenu } | complete
    }

    if $lookup.exit_code != 0 {
      echo "!! Failed to select project"
      echo $lookup
      exit 1
    }

    $lookup.stdout
  }

  if $prj != "" {
    let $project = $prj | str trim

    echo $":: Opening project ($project)"
    if $is_tmux {
      let wname = $project | path basename | str replace --all --regex '[^a-zA-Z0-9]' ''
      let tmux_windows = tmux list-windows -F '#{window_index},#{window_name}'  | from csv --trim all | rename index name
      let prj_windows = $tmux_windows| filter { |w| $w.name == $wname} | get index

      if ($prj_windows | length) > 0 {
        exec tmux select-window -t $wname
      }

      tmux new-window -c $project -n $wname
      tmux select-window -t $wname
      tmux send-keys 'vim .' 'C-m'
      tmux split-window -h -c $project
      tmux select-pane -l
    } else {
      kitty --single-instance $project
      codium -n $project
    }
  } else {
    echo $"!! No project found, \"($prj)\", exiting"
    exit 1
  }
}
