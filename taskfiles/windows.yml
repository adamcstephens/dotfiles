version: "3"

tasks:
  bootstrap:
    - powershell
    - fonts
    - git
    - ssh
    - vscode:settings

  debloat:
    cmds:
      - powershell -Command '& {iwr -useb https://simeononsecurity.ch/scripts/windowsoptimizeanddebloat.ps1| iex}'

  # task os:firefox-patch FIREFOX_PROFILE=C:\Users\Adam\AppData\Roaming\Mozilla\Firefox\Profiles\f2w3i0u5.default-release
  firefox-patch:
    dir: "{{ .FIREFOX_PROFILE }}"
    cmds:
      - test -n "{{ .FIREFOX_PROFILE }}"
      - test -d "{{ .FIREFOX_PROFILE }}"
      - xcopy /Y "{{.USERPROFILE}}\.dotfiles\apps\firefox\arkenfox\prefsCleaner.bat" "{{ .FIREFOX_PROFILE }}"
      - xcopy /Y "{{.USERPROFILE}}\.dotfiles\apps\firefox\arkenfox\updater.bat" "{{ .FIREFOX_PROFILE }}"
      - xcopy /Y "{{.USERPROFILE}}\.dotfiles\apps\firefox\arkenfox\user.js" "{{ .FIREFOX_PROFILE }}"
      - xcopy /Y "{{.USERPROFILE}}\.dotfiles\apps\firefox\user-overrides.js" "{{ .FIREFOX_PROFILE }}"
      - .\\updater.bat -unattended
      - .\\prefsCleaner.bat -unattended

  fonts:
    dir: ~/.dotfiles/fonts
    cmds:
      - powershell -file .\\install-windows.ps1
    status:
      - "test -e ~/.dotfiles/fonts/.installed"

  git:
    cmds:
      - task: lib:symlink
        vars:
          DST: 'C:\Users\adam\.gitconfig'
          SRC: 'C:\Users\adam\.dotfiles\gitconfig'

  node-exporter:
    cmds:
      - |
        gsudo powershell -Command '& {
          New-NetFirewallRule -DisplayName 'windows_exporter' -Profile 'Private' -Direction Inbound -Action Allow -Protocol TCP -LocalPort 6624
        }'

  lib:symlink:
    cmds:
      - "mkdir -p '{{.PARENT}}'"
      - gsudo powershell -Command '& {New-Item -ItemType SymbolicLink -Path {{.DST}} -Target {{.SRC}}}'
    status:
      - "test -d '{{.PARENT}}'"
      - "test -e '{{.DST}}'"
    vars:
      PARENT:
        sh: "dirname '{{.DST}}'"

  powershell:
    cmds:
      - task: lib:symlink
        vars:
          DST: 'C:\Users\adam\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1'
          SRC: 'C:\Users\adam\.dotfiles\PowerShell_profile.ps1'
      - task: lib:symlink
        vars:
          DST: 'C:\Users\adam\Documents\PowerShell\Microsoft.PowerShell_profile.ps1'
          SRC: 'C:\Users\adam\.dotfiles\PowerShell_profile.ps1'

  # didn't need, but leaving cause it could be used to install a missing module
  # powershell:psreadline:
  #   cmds:
  #     - powershell -Command '& {if (Install-Module PSReadLine) { exit 0 } else { exit 1} }'
  #   status:
  #     - powershell -Command '& {if (Get-Module -ListAvailable -Name PSReadLine) { exit 0 } else { exit 1} }'

  ssh:
    cmds:
      - |
        gsudo powershell -Command '& {
          Get-Service -Name ssh-agent | Set-Service -StartupType Automatic
          Start-Service ssh-agent
        }'
      - touch $LOCALAPPDATA/.dotfiles-ssh-agent
    status:
      - 'test -e "$LOCALAPPDATA/.dotfiles-ssh-agent"'

  terminal:backup:
    cmds:
      - cp /mnt/c/Users/adam/AppData/Local/Packages/Microsoft.WindowsTerminalPreview_*/LocalState/settings.json ./windowsterminal-settings.json
      - chmod 644 windowsterminal-settings.json

  vscode:settings:
    cmds:
      - task: lib:symlink
        vars:
          DST: 'C:\Users\adam\AppData\Roaming\Code\User\keybindings.json'
          SRC: 'C:\Users\adam\.dotfiles\vscode\keybindings.json'
      - task: lib:symlink
        vars:
          DST: 'C:\Users\adam\AppData\Roaming\Code\User\settings.json'
          SRC: 'C:\Users\adam\.dotfiles\vscode\settings.json'

  winget:export:
    cmds:
      - powershell -Command '& {~/AppData/Local/Microsoft/WindowsApps/winget.exe export --source winget --output winget.json}'

  winget:import:
    cmds:
      - powershell -Command '& {~/AppData/Local/Microsoft/WindowsApps/winget.exe import winget.json}'

  wsl:
    cmds:
      - gsudo wsl --install
      # - gsudo dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
      # - gsudo dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
      # - wsl_update_x64.msi
