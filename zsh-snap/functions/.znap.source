#!/bin/zsh
# source plugin or repo submodules & scripts
# args: <repo> [ ( <dir> | <file> ) ... ]

if (( $# < 1 )); then
  print -u2 'znap source: not enough arguments'
  .znap.help source
  return $(( sysexits[(i)USAGE] + 63 ))
fi

local -aU src=()
() {
  emulate -L zsh; setopt $_znap_opts

  local repo=~[$1]
  shift
  local -a tmp ext=( '.plugin.zsh' '(|.*).zsh[^.]#' '.sh' )
  local -aU dirs=( $repo/${^~@}(-/) ); (( # )) ||
    dirs=( $repo )
  local d; for d in $dirs[@]; do
    tmp=( $d/(#i){*(${(~j:|:)${=${d:t}//[-_]/ }:#zsh})*,init,*}${^~ext}~*.zwc(-.rY1))
    src+=( $tmp[1] )
  done
  local -aU names=( $repo/$^@ )
  names=( ${names:|dirs} )
  local name; for name in $names[@]; do
    tmp=( $name$^~ext(-.rY1) )
    src+=( $tmp[1] )
  done
  local pat e
  for pat in $names[@]; do
    for e in $ext[@]; do
      tmp=( $~pat~^**$~e(-.) )
      if (( $#tmp[@] )); then
        src+=( $tmp[@] )
        break
      fi
    done
  done
} "$@"

local -i ret=1
local s; for s in $src; do
  . $s && ret=0
done
return ret
